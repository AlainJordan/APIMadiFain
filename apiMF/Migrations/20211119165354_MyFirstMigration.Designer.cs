// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiMF.Models;

namespace apiMF.Migrations
{
    [DbContext(typeof(PostDbContext))]
    [Migration("20211119165354_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("apiMF.Models.Categoriaconsumible", b =>
                {
                    b.Property<int>("IdCategoriaConsumibles")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaConsumibles");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("NombreCategoriaConsumibles")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdCategoriaConsumibles")
                        .HasName("PRIMARY");

                    b.ToTable("categoriaconsumibles");
                });

            modelBuilder.Entity("apiMF.Models.Categoriaherramienta", b =>
                {
                    b.Property<int>("IdCategoriaHerramienta")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaHerramienta");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("NombreCategoriaHerramienta")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdCategoriaHerramienta")
                        .HasName("PRIMARY");

                    b.ToTable("categoriaherramienta");
                });

            modelBuilder.Entity("apiMF.Models.Categoriamateriaprima", b =>
                {
                    b.Property<int>("IdCategoriaMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaMateriaPrima");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NombreCategoriaMateriaPrima")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdCategoriaMateriaPrima")
                        .HasName("PRIMARY");

                    b.ToTable("categoriamateriaprima");
                });

            modelBuilder.Entity("apiMF.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("ProductoTerminado")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdCliente")
                        .HasName("PRIMARY");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("apiMF.Models.Consumible", b =>
                {
                    b.Property<int>("IdConsumible")
                        .HasColumnType("int")
                        .HasColumnName("idConsumible");

                    b.Property<string>("ClaveConsumible")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DescripcionConsumible")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<string>("IdCategoriaConsumible")
                        .HasColumnType("longtext")
                        .HasColumnName("idCategoriaConsumible");

                    b.Property<string>("Imagen")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NombreConsumible")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Stock")
                        .HasColumnType("double");

                    b.Property<decimal>("UnidadMedida")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.HasKey("IdConsumible")
                        .HasName("PRIMARY");

                    b.ToTable("consumible");
                });

            modelBuilder.Entity("apiMF.Models.Herramientum", b =>
                {
                    b.Property<int>("IdHerramienta")
                        .HasColumnType("int")
                        .HasColumnName("idHerramienta");

                    b.Property<string>("ClaveHerramienta")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DescripcionHerramienta")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoriaHerramienta")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaHerramienta");

                    b.Property<string>("Imagen")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NombreHerramienta")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Stock")
                        .HasColumnType("double");

                    b.HasKey("IdHerramienta")
                        .HasName("PRIMARY");

                    b.ToTable("herramienta");
                });

            modelBuilder.Entity("apiMF.Models.Materiaprima", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idMateriaPrima");

                    b.Property<int>("CategoriaMateriaPrima")
                        .HasColumnType("int");

                    b.Property<string>("ClaveMateriaPrima")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DescripcionMateriaPrima")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoriaMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaMateriaPrima");

                    b.Property<int?>("Imagen")
                        .HasColumnType("int");

                    b.Property<string>("NombreMateriaPrima")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<double>("Stock")
                        .HasColumnType("double");

                    b.Property<decimal?>("UnidadMedida")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.HasKey("IdMateriaPrima")
                        .HasName("PRIMARY");

                    b.ToTable("materiaprima");
                });

            modelBuilder.Entity("apiMF.Models.Productoterminado", b =>
                {
                    b.Property<int>("IdProductoTerminado")
                        .HasColumnType("int")
                        .HasColumnName("idProductoTerminado");

                    b.Property<string>("DescripcionProductoTerminado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("FechaLlegada")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.Property<string>("NombreProductoTerminado")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("status");

                    b.Property<double>("Stock")
                        .HasColumnType("double");

                    b.HasKey("IdProductoTerminado")
                        .HasName("PRIMARY");

                    b.ToTable("productoterminado");
                });

            modelBuilder.Entity("apiMF.Models.Tipousuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("TipoUsuario1")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("TipoUsuario");

                    b.HasKey("IdTipoUsuario")
                        .HasName("PRIMARY");

                    b.ToTable("tipousuario");
                });

            modelBuilder.Entity("apiMF.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .HasColumnType("int")
                        .HasColumnName("idUsuarios");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("correo");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("password");

                    b.HasKey("IdUsuarios")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
